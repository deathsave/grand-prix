#config_version=6

mode:
  start_events:
  - green_flag
  stop_events:
  - pit_required_oil
  - pit_required_fuel
  - pit_required_tires
  - green_flag_bad_luck
  - green_flag_degrade_all{current_player.level_tires == 1 or current_player.level_oil == 1 or current_player.level_fuel == 1}
  restart_on_next_ball: true
  priority: 100

sound_player:
  mode_green_flag_started:
    particular:
      action: play

slide_player:
  mode_green_flag_started:
    green_flag_slide:
      action: play
  player_level_fuel: green_flag_slide
  player_level_tires: green_flag_slide
  player_level_oil: green_flag_slide

light_player:
  mode_green_flag_started:
    x_loop_gate:
      color: white
  ######################
  ## Grooveline State ##
  ######################
  player_grooveline_counter_count{current_player.grooveline_counter_count == 1}:
    l_grooveline_01: on
  player_grooveline_counter_count{current_player.grooveline_counter_count == 2}:
    l_grooveline_01: on
    l_grooveline_02: on
  player_grooveline_counter_count{current_player.grooveline_counter_count == 3}:
    l_grooveline_01: on
    l_grooveline_02: on
    l_grooveline_03: on
  player_grooveline_counter_count{current_player.grooveline_counter_count == 4}:
    l_grooveline_01: on
    l_grooveline_02: on
    l_grooveline_03: on
    l_grooveline_04: on
  player_grooveline_counter_count{current_player.grooveline_counter_count == 5}:
    l_grooveline_01: on
    l_grooveline_02: on
    l_grooveline_03: on
    l_grooveline_04: on
    l_grooveline_05: on
  player_grooveline_counter_count{current_player.grooveline_counter_count == 6}:
    l_grooveline_01: on
    l_grooveline_02: on
    l_grooveline_03: on
    l_grooveline_04: on
    l_grooveline_05: on
    l_grooveline_06: on
  player_grooveline_counter_count{current_player.grooveline_counter_count == 7}:
    l_grooveline_01: on
    l_grooveline_02: on
    l_grooveline_03: on
    l_grooveline_04: on
    l_grooveline_05: on
    l_grooveline_06: on
    l_grooveline_07: on
  player_grooveline_counter_count{current_player.grooveline_counter_count == 8}:
    l_grooveline_01: on
    l_grooveline_02: on
    l_grooveline_03: on
    l_grooveline_04: on
    l_grooveline_05: on
    l_grooveline_06: on
    l_grooveline_07: on
    l_grooveline_08: on
  player_grooveline_counter_count{current_player.grooveline_counter_count == 9}:
    l_grooveline_01: on
    l_grooveline_02: on
    l_grooveline_03: on
    l_grooveline_04: on
    l_grooveline_05: on
    l_grooveline_06: on
    l_grooveline_07: on
    l_grooveline_08: on
    l_grooveline_09: on

show_player:
  player_grooveline_counter_count{current_player.grooveline_counter_count == 9}: grooveline_soon

sequences:
  seq_lap:
    events:
    - s_spinner_active
    - s_grooveline_active
    disable_on_complete: false

counters:
  lap_counter:
    count_events: logicblock_seq_lap_complete
    starting_count: 0
    count_interval: 1
    # TODO: maybe consider having a ceiling
    #       where the "race is completed"
    #count_complete_value: 100
  grooveline_counter:
    count_events: logicblock_seq_lap_complete
    starting_count: 0
    count_interval: 1
    count_complete_value: 10
    # keep state between mode changes but will
    # reset on ball end per base mode
    persist_state: true
  grand_counter:
    count_events: s_grand_advance_active
    starting_count: 0
    count_interval: 1
    count_complete_value: 5
    persist_state: true
    reset_events:
    - s_grand_hole_active
    - logicblock_prix_counter_complete
    enable_events:
    - logicblock_prix_counter_complete
    start_enabled: true
    disable_on_complete: true
    reset_on_complete: false
  # NOTE: prix counter is dependent on grand_counter
  prix_counter:
    count_events: s_prix_advance_active
    starting_count: 0
    count_interval: 1
    count_complete_value: 4
    persist_state: true
    enable_events:
    - logicblock_grand_counter_complete
    disable_on_complete: true
  grand_prix_counter:
    count_events: logicblock_prix_counter_complete
    starting_count: 0
    count_complete_value: 4
    reset_on_complete: false

# Every 3 laps, a random event will occur
random_event_player:
  player_lap_counter_count{(current_player.lap_counter_count % 3 == 0) and (current_player.lap_counter_count > 0)}:
    events:
      # TODO: 20% chance good things happen
      green_flag_smooth_sailing: 20
      # 74% chance of normal wear and tear
      green_flag_degrade_fuel: 20
      green_flag_degrade_oil: 20
      green_flag_degrade_tires: 20
      green_flag_degrade_all: 14
      # TODO: 5% chance of a multi-car wreck
      green_flag_under_red: 5
      # TODO: Tiny chance ball ends immediately
      green_flag_bad_luck: 1
  green_flag_bad_luck:
    events:
    - green_flag_wreck
    - green_flag_head_gasket
    - green_flag_timing_belt
  s_disqualifier_active:
    events:
    - green_flag_degrade_fuel
    - green_flag_degrade_oil
    - green_flag_degrade_tires

variable_player:
  mode_green_flag_started:
    level_green_flag:
      action: add
      int: 1
  green_flag_degrade_fuel:
    level_fuel:
      action: add
      int: -1
  green_flag_degrade_oil:
    level_oil:
      action: add
      int: -1
  green_flag_degrade_tires:
    level_tires:
      action: add
      int: -1
  green_flag_degrade_all:
    level_fuel:
      action: add
      int: -1
    level_oil:
      action: add
      int: -1
    level_tires:
      action: add
      int: -1
  s_fuel_active:
    level_fuel: 0|block
  s_oil_active:
    level_oil: 0|block
  s_tires_active:
    level_tires: 0|block
  #############
  ## Scoring ##
  #############
  s_spinner_active:
    score: 20|block
  s_grooveline_active:
    score: 100|block
  ########################
  ## Counter Peristence ##
  ########################
  # Per docs, "Counters no longer save their
  # state in player variables", so we need
  # to map them manually here
  logicblock_lap_counter_updated:
    lap_counter_count:
      int: value
      action: set
  logicblock_grooveline_counter_updated:
    grooveline_counter_count:
      int: value
      action: set
  logicblock_grand_counter_updated:
    grand_counter_count:
      int: value
      action: set
  logicblock_prix_counter_updated:
    prix_counter_count:
      int: value
      action: set
  logicblock_grand_prix_counter_updated:
    grand_prix_counter_count:
      int: value
      action: set

event_player:
  green_flag_degrade_fuel{current_player.level_fuel == 1}:
  - pit_required_fuel
  green_flag_degrade_oil{current_player.level_oil == 1}:
  - pit_required_oil
  green_flag_degrade_tires{current_player.level_tires == 1}:
  - pit_required_tires
